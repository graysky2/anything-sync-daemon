#!/bin/bash
# Anything-sync-daemon
# By graysky <graysky AT archlinux DOT us>
# Modified by Victor Unegbu <victor@unegbu.com>
# Inspired by some code originally  written by Colin Verot

sanity() {
	# check the configuration
	if [[ -z "${WHATTOSYNC[0]}" ]]; then
		echo "Must define at least one directory in $CONF" >&2
		return 2
	fi

	if [[ ! -d "$TMPFS" ]]; then
		echo "I cannot read $TMPFS which is defined in $CONF" >&2
		return 3
	fi

	if [[ -z "$PREFIX" ]]; then
		echo "Must define a prefix in $CONF" >&2
		return 4
	fi

	if [[ -z "$PREFIX_PERMISSIONS" ]]; then
		echo "Must define prefix permissions in $CONF" >&2
		return 5
	fi
}

sync() {
	# sync hdd to tmpfs and back again
	local i STATIC LINK
	install -d -m"$PREFIX_PERMISSIONS" "$VOLATILE" || {
		echo "Failed to create $VOLATILE" >&2
		return 11
	}
	
	for i in "${WHATTOSYNC[@]}"; do
		STATIC="$i-backup_asd"	# this is the hdd bound backup in case of power failure
		LINK="$i"	# this is the name of the symlink

		if [[ -d $LINK ]]; then
			[[ -d "$VOLATILE$i" ]] || install -d -m755 "$VOLATILE$i"

			# backup targets and link to tmpfs
			if [[ "$(readlink "$LINK")" != "$VOLATILE$i" ]]; then
				mv "$LINK" "$STATIC"
				ln -s "$VOLATILE$i" "$LINK"
			fi

			# sync the RAM targets to the disc
			if [[ -e "$LINK/.flagged" ]]; then
				rsync -a --delete --exclude .flagged "$LINK/" "$STATIC/"
			else
				rsync -a "$STATIC/" "$LINK/"
				> "$LINK/.flagged"
			fi
		fi
	done
}

check() {
	# crash recovery
	local i STATIC LINK
	for i in "${WHATTOSYNC[@]}"; do
		STATIC="$i-backup_asd"  # this is the hdd bound backup in case of power failure
		LINK="$i" # this is the name of the symlink
		if [[ ! -e "$VOLATILE$i/.flagged" ]]; then
			[[ -h "$LINK" ]] && rm -f "$LINK"
			[[ -d "$STATIC" ]] && mv "$STATIC" "$LINK"
		fi
	done
    /bin/true
}

unsync() {
	# restore virgin state on physical discs
	local i STATIC LINK
	for i in "${WHATTOSYNC[@]}"; do
		STATIC="$i-backup_asd"  # this is the hdd bound backup in case of power failure
		LINK="$i" # this is the name of the symlink

		# check if target is there
		if [[ -h "$LINK" ]]; then
			rm -f "$LINK"
			[[ -d "$STATIC" ]] && mv "$STATIC" "$LINK"
			[[ -d "$VOLATILE$i" ]] && rm -rf "$VOLATILE$i"
		fi
	done

	rm -rf "$VOLATILE"
}

# parse options
CONF="/etc/asd.conf"
OPTIND=1
OPTARG=""
opt=""
while getopts 'c:' opt; do
  case "$opt" in
    c)  CONF="${OPTARG}";;
  esac
done
shift "$((${OPTIND} - 1))"

[[ ! -f "$CONF" ]] && {
	echo "$CONF does not exist!" >&2
	exit 1
}

source "$CONF"

declare -r VOLATILE="$(readlink -f "$TMPFS")/$PREFIX"

case "$1" in
    sanity)
        sanity;;
    start)
        if [[ -f $RUNFILE ]]; then
            echo "Anything-Sync-Daemon is already started."
        else
            check
            sync
            mkdir -p $(dirname $RUNFILE) > $RUNFILE
        fi
        ;;
    stop)
        if [[ ! -f $RUNFILE ]]; then
            echo "Anything-Sync-Daemon is already stopped."
        else
            sanity
            sync
            unsync
            rm $RUNFILE
        fi
        ;;
    check)
        sanity || exit $?
        check;;
    sync)
        sanity || exit $?
        sync
        ;;
    unsync)
        sanity || exit $?
        unsync
        ;;
    *)
        # usage
        echo "usage: $0 [-c <file>] {check|sanity|sync|unsync}"
esac
