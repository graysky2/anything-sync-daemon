.\" Text automatically generated by txt2man
.TH anything-sync-daemon 1 "26 November 2016" "" ""
.SH NAME
\fBanything-sync-daemon \fP- Symlinks and syncs user specified dirs to RAM thus reducing HDD/SDD calls and speeding-up the system.
\fB
.SH DESCRIPTION
Anything-sync-daemon (asd) is a tiny pseudo-daemon designed to manage user specified directories referred to as sync targets from here on out, in tmpfs and to periodically sync them back to the physical disc (HDD/SSD). This is accomplished via a symlinking step and an innovative use of rsync to maintain synchronization between a tmpfs copy and media-bound backups. Additionally, asd features several crash-recovery features.
.PP
Design goals of asd:
.RS
.IP \(bu 3
Completely transparent user experience.
.IP \(bu 3
Reduced wear to physical discs (particularly SSDs).
.IP \(bu 3
Speed.
.RE
.PP
Since the sync targets is relocated into tmpfs (RAM disk), the corresponding onslaught of I/O associated with system usage of them is also redirected from the physical disc to RAM, thus reducing wear to the physical disc and also improving speed and responsiveness.
.SH SETUP
/etc/asd.conf contains all user managed settings.
Optionally another file can be used by setting the ASDCONF environment variable.
.PP
NOTE: edits made to /etc/asd.conf while asd is running will be applied only after asd has been restarted from the init service.
.RS
.IP \(bu 3
At a minimum, define the sync targets to be managed by asd in the WHATTOSYNC array. Syntax below.
.IP \(bu 3
Optionally uncomment and define the location of your distro's tmpfs* in the VOLATILE variable.
.IP \(bu 3
Optionally enable the use of overlayfs to improve sync speed even further and use a smaller memory footprint. Do this in the USE_OVERLAYFS variable. Note that this option requires your kernel to be configured to use either the 'overlay' or 'overlayfs' module. See the FAQ below for additional details on this feature.
.IP \(bu 3
Optionally disable the use of crash-recovery snapshots. Do this in the USE_BACKUPS variable.
.IP \(bu 3
Optionally define the number of crash-recovery snapshots to keep. Do this in the BACKUP_LIMIT variable.
.RE
.PP
*Note that the default value of "/tmp" should work just fine for the VOLATILE setting. If using bleachbit, do NOT invoke it with the '\fB--clean\fP system.tmp' switch or you will remove a key dot file (.foo) from /tmp that asd needs to keep track of sync status. Also note that using a value of "/dev/shm" can cause problems with systemd's NAMESPACE spawning only when users enable the overlayfs option.
.PP
Example:
.PP
.nf
.fam C
 WHATTOSYNC=('/var/lib/monitorix' '/srv/http' '/foo/bar')

 or

 WHATTOSYNC=(
 '/var/lib/monitorix'
 '/srv/http'
 '/foo/bar'
 )

.fam T
.fi
.SH RUNNING ASD
.SS PREVIEW MODE
The preview option can be called to show users exactly what asd will do/is doing based on the entries in /etc/asd.conf as well printout useful information such as dir size, paths, and if any recovery snapshots have been created.
.PP
.nf
.fam C
 $ asd p

 Anything-sync-daemon on Arch Linux.

 Systemd service is currently active.
 Systemd resync service is currently active.
 Overlayfs v23 is currently active.

 Asd will manage the following per /run/asd.conf settings:

 owner/group id:     root/0
 target to manage:   /srv/http/serve
 sync target:        /srv/http/.serve-backup_asd
 tmpfs target:       /tmp/asd-root/srv/http/serve
 dir size:           21M
 overlayfs size:     15M
 recovery dirs:      2 <- delete with the c option
  dir path/size:     /srv/http/.serve-backup_asd-crashrecovery-20141105_124948 (17M)
  dir path/size:     /srv/http/.serve-backup_asd-crashrecovery-20150124_062311 (21M)

 owner/group id:     facade/100
 target to manage:   /home/facade/logs
 sync target:        /home/facade/.logs-backup_asd
 tmpfs target:       /tmp/asd-facadey/home/facade/logs
 dir size:           1.5M
 overlayfs size:     480K
 recovery dirs:      none

.fam T
.fi
.SS CLEAN MODE
The clean mode will delete ALL recovery snapshots that have accumulated. Run this only if you are sure that you want to delete them.
.PP
Note that if a sync target is owned by root or another user, and if you call asd to clean, it will throw errors based on the permissions of your sync targets.
.PP
.nf
.fam C
 $ asd c

 Anything-sync-daemon on Arch Linux.

 Deleting 2 crashrecovery dirs for sync target /srv/http/serve
  /srv/http/.serve-backup_asd-crashrecovery-20141105_124948
  /srv/http/.serve-backup_asd-crashrecovery-20150124_062311

.fam T
.fi
.SS START AND STOP ASD FOR SYSTEMD USERS
Both a systemd service file and timer are provided, and should be used to start or stop asd.
.PP
The role of the timer is update the tmpfs copies back to the disk. This occurs once per hour by default. The timer is started automatically with asd.service.
.PP
.nf
.fam C
 # systemctl [option] asd

.fam T
.fi
Available options:
start
stop
enable
disable
.SS  START AND STOP ASD FOR USERS OF OTHER INIT SYSTEMS
For distros not using systemd, another init script should be used to manage the daemon. Examples are provided and are known to work with Upstart.
.PP
Note that for these init systems, the supplied cron script (installed to /etc/cron.hourly) will run the resync option to keep the tmpfs copies sync'ed. Of course, the target system must have cron installed and active for this to happen.
.SH SUPPORTED DISTROS
At this time, the following distros are officially supported but there is no reason to think that asd will not run on another distro:
.IP \(bu 3
Arch Linux
.IP \(bu 3
Chakra
.IP \(bu 3
Debian (6+)
.IP \(bu 3
Mint (14+)
.IP \(bu 3
Ubuntu (10.04+)
.SH FAQ
Q1: What is overlayfs mode?
.PP
A1: Overlayfs is a simple union file-system mainlined in the Linux kernel version 3.18.0. Starting with asd version 5.54, overlayfs can be used to reduce the memory footprint of asd's tmpfs space and to speed up sync and unsync operations. The magic is in how the overlay mount only writes out data that has changed rather than the entire sync target. See Example 1 below. The same recovery features asd uses in its default mode are also active when running in overlayfs mode. Overlayfs mode is enabled by uncommenting the USE_OVERLAYFS= in /etc/asd.conf followed by a restart of the daemon.
.PP
There are several versions of overlayfs available to the Linux kernel in production in various distros. Versions 22 and lower have a module called 'overlayfs' while newer versions (23 and higher) have a module called 'overlay' -- note the lack of the 'fs' in the newer version. Asd will automatically detect the overlayfs available to your kernel if it is configured to use one of them.
.PP
See the example in the PREVIEW MODE section above which shows a system using overlayfs to illustrate the memory savings that can be achieved. Note the "overlayfs size" report compared to the total "dir size" report for each sync target. Be aware that these numbers will change depending on just how much data is written to the sync target, but in common use cases, the overlayfs size will always be less than the dir size.
.PP
Q2: Why do I see another directory ".foo-back-ovfs" when I enable overlayfs?
.PP
A2: The way overlayfs works is to mount a read-only base copy (so-called lower dir) of the target, and manage the new data on top of that. In order to avoid resyncing to the read-only file system, a copy is used instead. So using overlayfs is a trade off: faster initial sync times and less memory usage vs. disk space.
.PP
Q3: My system crashed and asd didn't sync back. What do I do?
.PP
A3: The "last good" backup of your sync targets is just fine still sitting happily on your filesystem. Upon restarting asd (on a reboot for example), a check is preformed to see if the symlink to the tmpfs copy of your sync target is valid. If it is invalid, asd will snapshot the "last good" backup before it rotates it back into place. This is more for a sanity check that asd did no harm and that any data loss was a function of something else.
.PP
Q4: Where can I find this snapshot?
.PP
A4: You will find the snapshot in the same directory as the sync target and it will contain a date-time-stamp that corresponds to the time at which the recovery took place. For example, a /foo/bar snapshot will be /foo/.bar-backup_asd-crashrecovery-20141221_070112 -- of course, the date_time suffix will be different for you.
.PP
Q5: How can I restore the snapshot?
.PP
A5: Follow these steps:
.RS
.IP 1. 4
Stop asd.
.IP 2. 4
Confirm that there is no symlink to the sync target. If there is, asd did not stop correctly for other reasons.
.IP 3. 4
Move the "bad" copy of the sync taget to a backup (don't blindly delete anything).
.IP 4. 4
Copy the snapshot directory to the expected sync target.
.RE
.PP
Example using /foo/bar:
.RS
.IP 1. 4
mv /foo/bar /for/bar-bad
.IP 2. 4
cp \fB-a\fP /foo/.bar-backup_asd-crashrecovery-20141221_070112 /foo/bar
.RE
.PP
At this point, check that everything is fine with the data on /foo/bar and, if all is well, it is safe to delete the snapshot.
.PP
Q6: Can asd delete the snapshots automatically?
.PP
A6: Yes, run asd with the "clean" switch to delete snapshots.
.SH CONTRIBUTE
Users wishing to contribute to this code, should fork and send a pull request. Source is freely available on the project page linked below.
.SH BUGS
Discover a bug? Please open an issue on the project page linked below.
.RS
.IP \(bu 3
Currently, asd cannot handle open files on a sync target so if a hung process has something open there, it can be messy.
.IP \(bu 3
If syncing a path where pacman (Arch Linux package manager) is expected to install files, pacman will stop the update since version 4.2 of pacman will refuse to install to a symlink. If you are syncing a path like this, you will need to stop asd prior to the package update.
.SH ONLINE
.IP \(bu 3
Project page: https://github.com/graysky2/anything-sync-daemon
.IP \(bu 3
Wiki page: https://wiki.archlinux.org/index.php/Anything-sync-daemon
.SH AUTHOR
graysky (graysky AT archlinux DOT us)
